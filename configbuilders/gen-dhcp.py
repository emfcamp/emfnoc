#!/usr/bin/python

# EMF 2014 dhcpd config generator

import ipaddr, time, os, sys, ConfigParser

sys.path.insert(0, '../../cisco-configbuilder')

from nocsheet import login, get_worksheets, get_worksheet_data

if not os.path.exists('out'):
  os.mkdir('out')

configfile4 = "out/dhcpd-subnets.conf"
configfile6 = "out/dhcpd6-subnets.conf"

config = ConfigParser.ConfigParser()
if not config.read("/etc/emf-gdata.conf"):
  print "Warning: config file /etc/emf-gdata.conf could not be found or read"

spreadsheet = config.get('gdata', 'noc_combined')

spr_client = login("emfcamp DHCP config generator", config)

print "downloading Addressing"
ipv4 = get_worksheet_data(spr_client, spreadsheet, "Addressing")

f4 = open(configfile4, "w")
f6 = open(configfile6, "w")

f4.write("#\n")
f4.write("# generated by gen-dhcp.py from EMF2014 Google Spreadsheet\n")
f4.write("# %s %s\n" % (time.strftime('%m/%d/%Y'),time.strftime('%H:%M:%S')))
f4.write("#\n")

f6.write("#\n")
f6.write("# generated by gen-dhcp.py from EMF2014 Google Spreadsheet\n")
f6.write("# %s %s\n" % (time.strftime('%m/%d/%Y'),time.strftime('%H:%M:%S')))
f6.write("#\n")

scopes = 0

for row in ipv4:
  if "VLAN" in row and 'dhcp' in row and row['dhcp'] == 'y':
    scopes += 1

    ipv4 = ipaddr.IPNetwork(row['IPv4-Subnet'])
    ipv6 = ipaddr.IPNetwork(row['IPv6'])

    if "Domain" in row:
      domain = row["Domain"]
    else:
      domain = "emf.camp"
    if "Subdomain" in row:
      domain = row["Subdomain"] + "." + domain

    print "%s %s %s" % (ipv4, ipv6, domain)

    f4.write("\n")
    f4.write("# %s\n" % (row['Description']))
    f4.write("shared-network vlan%s {\n" % (row['VLAN']))
    f4.write("  subnet %s netmask %s {\n" % (ipv4.network, ipv4.netmask))
    f4.write("    option domain-name \"" + domain + "\";\n")
    f4.write("    option domain-name-servers 78.158.87.11,78.158.87.12;\n")
    f4.write("    option routers %s;\n" % (ipv4.network + 1))
    f4.write("    pool {\n")
    f4.write("      failover peer \"failover-partner\";\n")
    f4.write("      range %s %s;\n" % (ipv4.network + 11, ipv4.broadcast - 1))
    f4.write("    }\n")
    f4.write("  }\n")
    f4.write("}\n")

    f6.write("\n")
    f6.write("# %s\n" % (row['Description']))
    f6.write("shared-network vlan%s {\n" % (row['VLAN']))
    f6.write("  subnet6 %s {\n" % (ipv6))
    f6.write("    option dhcp6.domain-search \"" + domain + "\";\n")
    f6.write("    option dhcp6.name-servers 2001:7f8:8c:57::11,2001:7f8:8c:57::12;\n")
#stateful:    f6.write("    range6 %s %s;\n" % (ipv6.network + 0x11, ipv6.network + 0xffff))
    f6.write("  }\n")
    f6.write("}\n")

f6.close()
f4.close()

print "Generated %s scopes" % (scopes)
